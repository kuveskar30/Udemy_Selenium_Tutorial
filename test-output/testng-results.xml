<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="10" passed="7" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-12-04T11:05:51 IST" name="Loan Department" finished-at="2022-12-04T11:05:51 IST" duration-ms="79">
    <groups>
      <group name="Smoke">
        <method signature="Ploan.pLoan(java.lang.String,java.lang.String)[pri:0, instance:testNG.Ploan@6ae5aa72]" name="pLoan" class="testNG.Ploan"/>
        <method signature="day1.demo()[pri:0, instance:testNG.day1@38c6f217]" name="demo" class="testNG.day1"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2022-12-04T11:05:51 IST" name="Car loan" finished-at="2022-12-04T11:05:51 IST" duration-ms="72">
      <class name="testNG.CarLoan">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:testNG.CarLoan@692f203f]" started-at="2022-12-04T11:05:51 IST" name="beforeSuite" finished-at="2022-12-04T11:05:51 IST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:testNG.CarLoan@692f203f]" started-at="2022-12-04T11:05:51 IST" name="beforeTest" finished-at="2022-12-04T11:05:51 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="mobileCarLoan2()[pri:0, instance:testNG.CarLoan@692f203f]" started-at="2022-12-04T11:05:51 IST" name="mobileCarLoan2" finished-at="2022-12-04T11:05:51 IST" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileCarLoan2 -->
        <test-method signature="mobileCarLoan3(java.lang.String)[pri:0, instance:testNG.CarLoan@692f203f]" started-at="2022-12-04T11:05:51 IST" name="mobileCarLoan3" finished-at="2022-12-04T11:05:51 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA['personal_loan_department.com']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileCarLoan3 -->
        <test-method signature="apiCarLoan()[pri:0, instance:testNG.CarLoan@692f203f]" started-at="2022-12-04T11:05:51 IST" name="apiCarLoan" finished-at="2022-12-04T11:05:51 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiCarLoan -->
        <test-method signature="booksLoan()[pri:0, instance:testNG.CarLoan@692f203f]" started-at="2022-12-04T11:05:51 IST" name="booksLoan" finished-at="2022-12-04T11:05:51 IST" depends-on-methods="testNG.CarLoan.mobileCarLoan3, testNG.CarLoan.mobileCarLoan2" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- booksLoan -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:testNG.CarLoan@692f203f]" started-at="2022-12-04T11:05:51 IST" name="afterTest" finished-at="2022-12-04T11:05:51 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:testNG.CarLoan@692f203f]" started-at="2022-12-04T11:05:51 IST" name="afterSuite" finished-at="2022-12-04T11:05:51 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- testNG.CarLoan -->
    </test> <!-- Car loan -->
    <test started-at="2022-12-04T11:05:51 IST" name="personal loan" finished-at="2022-12-04T11:05:51 IST" duration-ms="79">
      <class name="testNG.Ploan">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:testNG.Ploan@6ae5aa72]" started-at="2022-12-04T11:05:51 IST" name="beforeTest" finished-at="2022-12-04T11:05:51 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="pLoan(java.lang.String,java.lang.String)[pri:0, instance:testNG.Ploan@6ae5aa72]" started-at="2022-12-04T11:05:51 IST" name="pLoan" finished-at="2022-12-04T11:05:51 IST" duration-ms="12" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA['personal_loan_department.com']]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[username1 for api key]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pLoan -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:testNG.Ploan@6ae5aa72]" started-at="2022-12-04T11:05:51 IST" name="afterTest" finished-at="2022-12-04T11:05:51 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- testNG.Ploan -->
      <class name="testNG.day1">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testNG.day1@38c6f217]" started-at="2022-12-04T11:05:51 IST" name="beforeMethod" finished-at="2022-12-04T11:05:51 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="demo()[pri:0, instance:testNG.day1@38c6f217]" started-at="2022-12-04T11:05:51 IST" name="demo" finished-at="2022-12-04T11:05:51 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testNG.day1@38c6f217]" started-at="2022-12-04T11:05:51 IST" name="afterMethod" finished-at="2022-12-04T11:05:51 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="failTest()[pri:0, instance:testNG.day1@38c6f217]" started-at="2022-12-04T11:05:51 IST" name="failTest" finished-at="2022-12-04T11:05:51 IST" duration-ms="7" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at testNG.day1.failTest(day1.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failTest -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testNG.day1@38c6f217]" started-at="2022-12-04T11:05:51 IST" name="beforeMethod" finished-at="2022-12-04T11:05:51 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testNG.day1@38c6f217]" started-at="2022-12-04T11:05:51 IST" name="afterMethod" finished-at="2022-12-04T11:05:51 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testNG.day1@38c6f217]" started-at="2022-12-04T11:05:51 IST" name="beforeMethod" finished-at="2022-12-04T11:05:51 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="secondTest()[pri:0, instance:testNG.day1@38c6f217]" started-at="2022-12-04T11:05:51 IST" name="secondTest" finished-at="2022-12-04T11:05:51 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- secondTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testNG.day1@38c6f217]" started-at="2022-12-04T11:05:51 IST" name="afterMethod" finished-at="2022-12-04T11:05:51 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testNG.day1 -->
    </test> <!-- personal loan -->
  </suite> <!-- Loan Department -->
</testng-results>
